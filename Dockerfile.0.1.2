
FROM arm64v8/ubuntu:19.10

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y apt-utils \
    && apt-get install -y python3 python3-pip rsync nodejs vim wget curl pigz libblas-dev liblapack-dev zlib1g-dev libbz2-dev liblzma-dev pkg-config libfreetype6-dev gfortran fort77 git libjpeg-dev tini minimap2 samtools muscle phyml mafft cmake libdeflate-dev libhdf5-dev libeigen3-dev pandoc graphviz imagemagick

RUN groupadd -g 1001 -r ont \
    && useradd -r -u 999 -g ont ont -s /bin/bash \
    && mkdir /home/ont \
    && chown ont:ont /home/ont

RUN curl -sL https://deb.nodesource.com/setup_12.x | bash \
    && apt-get install -y nodejs

COPY WHEELS/* /tmp/

# handle python and jupyter stuff
RUN pip3 install --upgrade pip \
    && pip install wheel setuptools \
    && pip install pybind11 \
    && pip install /tmp/Cython-0.29.14-cp37-cp37m-linux_aarch64.whl \
    &&  pip install matplotlib scipy pysam jupyterlab megrim binlorry biopython snakemake pyvcf ete3 clint datrie selenium papermill --find-links file:///tmp \
    && jupyter-nbextension enable --py --sys-prefix widgetsnbextension \
    && jupyter-labextension install @jupyter-widgets/jupyterlab-manager \
    && pip install git+https://github.com/artic-network/Porechop.git@v0.3.2pre \
    && pip install git+https://github.com/artic-network/fieldbioinformatics.git

# clean up ....
RUN apt-get autoremove -y \
    && apt-get clean \
    && rm -fR /tmp/* \
    && chown -R ont /usr/lib/node_modules

USER ont:ont

RUN cd /home/ont \
    && git clone https://github.com/artic-network/rampart.git \
    && cd rampart \
    && npm install \
    && npm run build \
    && npm install --no-bin-links -g . \
    && cd /home/ont \
    && git clone --recursive https://github.com/artic-network/artic-ncov2019.git 

COPY docker_workflow.sh /tmp/docker_workflow.sh

RUN echo 'export PATH=$PATH:/opt/minimap2-2.17\n' >> /home/ont/.bashrc \
    && echo 'export PATH=$PATH:/opt/bwa-0.7.17\n' >> /home/ont/.bashrc \
    && echo 'export PATH=$PATH:/opt/libdeflate-0.8\n' >> /home/ont/.bashrc \
    && echo 'alias rampart=/usr/lib/node_modules/artic-rampart/rampart.js\n' >> /home/ont/.bashrc \
    && cp /tmp/docker_workflow.sh /home/ont/docker_workflow.sh \
    && chmod +x /home/ont/docker_workflow.sh

USER root:root

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 10 

#COPY nanopolish.Makefile /tmp/nanopolish.Makefile
#RUN cd /opt \
#    && apt-get install -y software-properties-common \
#    && git clone --recursive https://github.com/jts/nanopolish.git \
#    && cd nanopolish \
#    && mv /tmp/nanopolish.Makefile Makefile \
#    && chmod +x Makefile \
#    && make

#RUN cd /opt \
#    && git clone https://github.com/lh3/bwa.git \
#    && cd bwa 

USER ont:ont

RUN echo 'export PATH=$PATH:/opt/nanopolish\n' >> /home/ont/.bashrc 

WORKDIR /home/ont/
EXPOSE 3000 3001 8888

# ENTRYPOINT ["tini", "--", "/home/ont/docker_workflow.sh"]

